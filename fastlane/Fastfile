# Fastfile 
# Copyright@2017 Abyss

fastlane_version ENV["FASTLANE_VERSION_MIN"]
default_platform :ios

platform :ios do
	before_all do
	end

	desc '构建测试版'
	override_lane :test do |options|

		UI.important("当前版本: 测试版")

		# git 确认状态健康
		# git 切换指定分支
		# git 确认分支正确
		# git 拉取最新代码
		# pod 更新本地三方库
		# project 修改工程DisplayName
		# project 修改工程Identifier
		# project 增加版本号/build号
		before
		version = get_version_number(xcodeproj: ENV["APP_PROJECT"])

		# 匹配证书
		match

		# 签名
		enable_automatic_code_signing(team_id: ENV["APP_TEAMID_TEST"])

		# 编译
		gym(output_name: ENV["APP_NAME"] + "-test-" + version)

		complete
		#  # 获取版本号
		#  version = get_version_number(xcodeproj: "#{scheme}.xcodeproj")
		#  UI.important "#{version}"
		#  # 发送邮件
		#  email(version: version)
	   
		#  # 提交git
		#  git_add(path: '.')
		#  git_commit(path: '.', message: "chore: 🚀[#{lane}] - Automatic version UP")
	end
	
	private_lane :complete do |options|
		lane  = ENV["FASTLANE_LANE_NAME"]

		# 上传三方
		platform = ENV["APP_PLATFORM"]
		if platform.length > 0
			path  = lane_context[SharedValues::IPA_OUTPUT_PATH]
			msg   = "[#{lane}] - automatic build by #{ENV["APP_ADMINER"]}#{ENV["FASTLANE_FASTFILE_VERSION"]}"

			if platform == "fir.im"
				token = ENV["APP_FIR_TOKEN"]
				system "fir publish #{path} -T #{token} -c #{msg}"
			elsif platform == "pgyer.com"
				ukey = ENV["APP_PGYER_UKEY"]
				token = ENV["APP_PGYER_TOKEN"]
				system """
				curl -F 'file=#{path}' \
				-F 'uKey=#{ukey}' \
				-F '_api_key=#{token}' \
				https://www.pgyer.com/apiv1/app/upload
				"""
			end
		end
	end

	private_lane :before do |options|
		UI.important("请确认是否解决冲突并且提交所有改动!")
		ensure_git_status_clean
		branch = ENV["APP_SETTING_GIT_BRANCH"]
		if branch.length > 0
			system("git checkout #{branch}")
			ensure_git_branch(
				branch: branch
		  	)
		end
		git_pull

		pod_update

		lane 				= ENV["FASTLANE_LANE_NAME"]
		appname 	  		= ENV["APP_NAME"]
		appname_release		= ENV["APP_NAME_RELEASE"]

		app_identifier = ENV["APP_IDENTIFIER_#{lane.upcase}"]
		if lane.to_s == "release"
			appname = appname_release
		else
			appname = appname + "-" + lane
		end
		update_info_plist(
			plist_path: ENV["APP_SCHEME"] + "/Info.plist",
			display_name: appname,
		)
		update_app_identifier(
			plist_path: ENV["APP_SCHEME"] + "/Info.plist",
			app_identifier: app_identifier,
		)
		UI.important "\n修改AppDisplayName:#{appname}\n修改Identifier:#{app_identifier}"
	
		if(ENV["APP_SETTING_VERSION_AUTO"])
			# Warning 请使用x.x.x标准版本号
			increment_build_number
			increment_version_number
		end
	end

	after_all do
	end
end